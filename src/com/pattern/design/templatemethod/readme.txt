模板方法模式：
在一个方法中定义一个算法的骨架，而将一些步骤延迟到子类中。模板方法便得子类可以在不改变算法结构的情况下，重新定义算法中的某些步骤。

这个模式是用来创建一个算法的模板。什么是模板?模板就是一个方法。更具体地说，这个方法将算法定义成一组步骤，其中的任何步骤都可以是抽象的，
由子类负责实现。这可以确保算法的结构保持不变，同时由子类提供部分实现。

钩子是一种被声明在抽象类中的方法，但只有空的或者默认的实现。钩子的存在，可以让子类有能力对算法的不同点进行挂钩。要不要挂钩，由子类自行决定。

当你的子类”必须"提供算法中某个方法或步骤的实现时.就使用抽象方法，如果算法的这个部分是可选的就用钩子。如果是钧子的话。一类可以选择实现这个钩子，但并不强制这么做。
钩子可以让子类实现算法中可选的部分，或者在钓子对于子类的实现并不重要的时候。子类可以对此钧子置之不理。钓于的另一个用法.是让子类能够有机会对模板方法中某些即将发生的(或刚刚发生的)步骤作出反应。

模板方法模式的重点在于提供一个算法、并让子类实现某些步骤而数组的排序做法很明显地并非如此，但是，我们都知道，荒野中的摸
式并非总是如同教科书例子一般地中规中矩，为了符合当前环境和实现的约束，它们总是要被适当地修改。


1、“模板方法”定义了算法的步骤，把这些步骤的实现延迟到子类。
2、模板方法模式为我们提供了一种代码复用的重要技巧。
3、模板方法的抽象类可以定义具体方法，抽象方法和钩子。
4、抽象方法由子类实现。
5、钩子是一种方法，它在抽象类中不做事，或者只做默认的事情，子类可以选择要不要去覆盖它。
6、为了防止子类改变模板方法中的算法，可以将模板方法声明为final。
7、好菜坞原则告诉我们，将决策权放在高层模块中，以便决定如何以及何时调用低层模块。
8、你将在真实世界代码中看到模板方法模式的许多变体，不要期待它们全都是一眼就可以被你认出的。
9、策略模式和模板方法模式都封装算法。一个用组合，一个用继承，
10、厂方法是模板方法的种特殊版本。











